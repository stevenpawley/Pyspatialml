{
  "hash": "7990dd8548f04afe0f49c5b65a12b7ed",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Overview\nformat: html\n---\n\nPyspatialml is a Python package for applying scikit-learn machine learning\nmodels to raster-based datasets. It is inspired by the famous \n[raster](https://cran.r-project.org/web/packages/raster/index.html)\npackage in the R statistical programming language which has been extensively\nused for applying statistical and machine learning models to geospatial raster\ndatasets.\n\nPyspatialml includes functions and classes for working with multiple raster\ndatasets and applying typical machine learning workflows including raster data\nmanipulation, feature engineering on raster datasets, extraction of training\ndata, and application of the ``predict`` or ``predict_proba`` methods of\nscikit-learn estimator objects to a stack of raster datasets.\n\nPyspatialml is built upon the \n[rasterio](https://rasterio.readthedocs.io/en/latest/) Python package which\nperforms all of the heavy lifting and is designed to work with the\n[geopandas](https://geopandas.org) package for related raster-vector data\ngeoprocessing operations.\n\n## Purpose\n\nA supervised machine-learning workflow as applied to spatial raster data\ntypically involves several steps:\n\n1.  Using vector features or labelled pixels to extract training data from a\n    stack of raster-based predictors (e.g. spectral bands, terrain derivatives,\n    or climate grids). The training data represent locations when some\n    property/state/concentration is already established, and might comprise\n    point locations of arsenic concentrations, or labelled pixels with\n    integer-encoded values that correspond to known landcover types.\n\n2.  Developing a machine learning classification or regression model on the\n    training data. Pyspatialml is designed to use scikit-learn compatible api's\n    for this purpose.\n3.  Applying the fitted machine learning model to make predictions on all of\n    the pixels in the stack of raster data.\n\nPyspatialml is designed to make it easy to develop spatial prediction models on\nstacks of 2D raster datasets that are held on disk. Unlike using python's\n``numpy`` module directly where raster datasets need to be held in memory, the\nmajority of functions within pyspatialml work with raster datasets that are\nstored on disk and allow processing operations to be performed on datasets that\nare too large to be loaded into memory.\n\nPyspatialml is designed to make it easy to work with typical raster data stacks\nconsisting of multiple 2D grids such as different spectal bands, maps etc.\nHowever, it's purpose is not to work with multidimensional datasets, i.e. those\nthat have more than 3 dimensions such as spacetime cubes of multiband data. The\n[xarray](http://xarray.pydata.org/en/stable/index.html) package can provide a\nstructure for this type of data.\n\n",
    "supporting": [
      "index_files/figure-html"
    ],
    "filters": [],
    "includes": {}
  }
}