{
  "hash": "308efad333d88256311ff71d4af11322",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Multi-Target Spatial Prediction using the Meuse Dataset\nformat:\n  html:\n    code-fold: false\n---\n\nHere we are using the meuse dataset which is included in the pyspatialml package as an example of performing a spatial model and prediction. We can access the datasets using the `pyspatialml.datasets` module:\n\n::: {#9f01e6dc .cell execution_count=1}\n``` {.python .cell-code}\nfrom copy import deepcopy\nfrom tempfile import NamedTemporaryFile\nimport geopandas as gpd\nimport numpy as np\nfrom pyspatialml import Raster\nfrom pyspatialml.preprocessing import xy_coordinates, distance_to_corners\nimport pyspatialml.datasets.meuse as ms\n\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nfrom matplotlib import cm\n```\n:::\n\n\n::: {#745fc2a1 .cell execution_count=2}\n``` {.python .cell-code}\npredictor_files = ms.predictors\ntraining_pts_file = ms.meuse\n```\n:::\n\n\n::: {#099cf2fd .cell execution_count=3}\n``` {.python .cell-code}\nstack = Raster(predictor_files)\nstack.names\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```\ndict_keys(['chnl_dist', 'dem', 'dist', 'ffreq', 'landimg2', 'landimg3', 'landimg4', 'mrvbf', 'rsp', 'slope', 'soil', 'twi'])\n```\n:::\n:::\n\n\nPyspatialml implements pandas-style indexing for `Raster` objects, using `Raster.loc` to index by the name of the raster, and `Raster.iloc` to select by index. This method also accepts slices. Label-based indexing is also provided directly by the __getattr_ magic method, i.e. `Raster[name]` or for multiple layers `Raster[(names)]`.\n\nFor example we can remove layers from Raster object using the `Raster.drop` method, or by subsetting the raster:\n\n::: {#c1e14c46 .cell execution_count=4}\n``` {.python .cell-code}\nstack.drop('ffreq')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRaster Object Containing 11 Layers\n    attribute                                             values\n0       names  [chnl_dist, dem, dist, landimg2, landimg3, lan...\n1       files  [/Users/stevenpawley/GitHub/Pyspatialml/pyspat...\n2        rows                                                104\n3        cols                                                 78\n4         res                                       (40.0, 40.0)\n5  nodatavals  [-99999.0, -99999.0, -1.0, -1.0, -1.0, -1.0, -...\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=4}\n```\n\n```\n:::\n:::\n\n\nWe can store matplotlib cmaps as an attribute within each layer in the Raster:\n\n::: {#15a7b907 .cell execution_count=5}\n``` {.python .cell-code}\nstack.chnl_dist.cmap = 'RdBu'\nstack.dem.cmap = 'terrain'\nstack.dist.cmap = 'Reds'\nstack.landimg2.cmap = 'Greys'\nstack.landimg3.cmap = 'Greys'\nstack.landimg4.cmap = 'Greys'\nstack.landimg4.cmap = 'Greys'\nstack.mrvbf.cmap = 'jet'\nstack.rsp.cmap = 'gnuplot2'\nstack.slope.cmap = 'PuRd'\nstack.soil.cmap = 'Set2'\nstack.twi.cmap = 'coolwarm'\n```\n:::\n\n\nPlot the predictors in the Raster object as a raster matrix:\n\n::: {#f4a33f49 .cell execution_count=6}\n``` {.python .cell-code}\nmpl.style.use('seaborn-v0_8')\naxs = stack.plot(figsize=(9, 7))\nax = axs.flatten()[10]\nim = ax.images\nim[0].colorbar.set_ticks([1,2,3])\nax = axs.flatten()[8]\nax.tick_params(axis='x', labelrotation=65)\n\nplt.tight_layout()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](multitarget-regression-soil-properties_files/figure-html/cell-7-output-1.png){width=845 height=662}\n:::\n:::\n\n\n## Feature Engineering\n\nWe want the prediction results to be dependent on the spatial locations of the training data. So to include spatial information, coordinate grids can be generated and added to the Raster object:\n\n::: {#e1c12410 .cell execution_count=7}\n``` {.python .cell-code}\nxy_layer = xy_coordinates(\n    layer=stack.iloc[0], \n    file_path=NamedTemporaryFile(suffix=\".tif\").name\n)\n```\n:::\n\n\n::: {#009adcf9 .cell execution_count=8}\n``` {.python .cell-code}\nxy_layer = xy_coordinates(\n    layer=stack.iloc[0], \n    file_path=NamedTemporaryFile(suffix=\".tif\").name\n)\n\nedms = distance_to_corners(\n    layer=stack.iloc[0], \n    file_path=NamedTemporaryFile(suffix=\".tif\").name\n)\nedms.rename(\n    {old: new for (old, new) in zip(edms.names, [\"tl\", \"tr\", \"bl\", \"br\", \"c\"])},\n    in_place=True\n)\n\nedms.plot()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](multitarget-regression-soil-properties_files/figure-html/cell-9-output-1.png){width=660 height=458}\n:::\n:::\n\n\nAppend them to the Raster object:\n\n::: {#77aa65b8 .cell execution_count=9}\n``` {.python .cell-code}\nstack = stack.append([xy_layer, edms])\n```\n:::\n\n\nPlot the new predictors:\n\n::: {#32cbc2d4 .cell execution_count=10}\n``` {.python .cell-code}\naxs = stack.plot(figsize=(9, 7))\nax = axs.flatten()[10]\nim = ax.images\nim[0].colorbar.set_ticks([1,2,3])\nax = axs.flatten()[8]\nax.tick_params(axis='x', labelrotation=65)\n\nplt.tight_layout()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](multitarget-regression-soil-properties_files/figure-html/cell-11-output-1.png){width=847 height=663}\n:::\n:::\n\n\nThe area that is filled by some of the grids is different. This doesn't matter for the prediction because pixels in the Raster object that include some NaNs in some of the layers will be removed. However, the plots could potentially be given a cleaner look. We can use the Raster.intersect method to fix this:\n\n::: {#76c21e07 .cell execution_count=11}\n``` {.python .cell-code}\nstack = stack.intersect()\n```\n:::\n\n\n::: {#91d55829 .cell execution_count=12}\n``` {.python .cell-code}\naxs = stack.plot(figsize=(9, 7))\nax = axs.flatten()[10]\nim = ax.images\nim[0].colorbar.set_ticks([1,2,3])\nax = axs.flatten()[8]\nax.tick_params(axis='x', labelrotation=65)\n\nplt.tight_layout()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](multitarget-regression-soil-properties_files/figure-html/cell-13-output-1.png){width=847 height=663}\n:::\n:::\n\n\n## Read the Meuse Dataset\n\n::: {#37936033 .cell execution_count=13}\n``` {.python .cell-code}\ntraining_pts = gpd.read_file(training_pts_file)\ntraining_pts.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=13}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>cadmium</th>\n      <th>copper</th>\n      <th>lead</th>\n      <th>zinc</th>\n      <th>elev</th>\n      <th>dist</th>\n      <th>om</th>\n      <th>ffreq</th>\n      <th>soil</th>\n      <th>lime</th>\n      <th>landuse</th>\n      <th>dist.m</th>\n      <th>geometry</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>11.7</td>\n      <td>85.0</td>\n      <td>299.0</td>\n      <td>1022.0</td>\n      <td>7.909</td>\n      <td>0.001358</td>\n      <td>13.6</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Ah</td>\n      <td>50.0</td>\n      <td>POINT (181072.000 333611.000)</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>8.6</td>\n      <td>81.0</td>\n      <td>277.0</td>\n      <td>1141.0</td>\n      <td>6.983</td>\n      <td>0.012224</td>\n      <td>14.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Ah</td>\n      <td>30.0</td>\n      <td>POINT (181025.000 333558.000)</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>6.5</td>\n      <td>68.0</td>\n      <td>199.0</td>\n      <td>640.0</td>\n      <td>7.800</td>\n      <td>0.103029</td>\n      <td>13.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Ah</td>\n      <td>150.0</td>\n      <td>POINT (181165.000 333537.000)</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2.6</td>\n      <td>81.0</td>\n      <td>116.0</td>\n      <td>257.0</td>\n      <td>7.655</td>\n      <td>0.190094</td>\n      <td>8.0</td>\n      <td>1</td>\n      <td>2</td>\n      <td>0</td>\n      <td>Ga</td>\n      <td>270.0</td>\n      <td>POINT (181298.000 333484.000)</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2.8</td>\n      <td>48.0</td>\n      <td>117.0</td>\n      <td>269.0</td>\n      <td>7.480</td>\n      <td>0.277090</td>\n      <td>8.7</td>\n      <td>1</td>\n      <td>2</td>\n      <td>0</td>\n      <td>Ah</td>\n      <td>380.0</td>\n      <td>POINT (181307.000 333330.000)</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nPlot the training points:\n\n::: {#4a282046 .cell execution_count=14}\n``` {.python .cell-code}\nfrom mpl_toolkits.axes_grid1 import make_axes_locatable\n\nfig, axs = plt.subplots(2, 3, figsize=(8.5, 7))\n\nfor i, (ax, target) in enumerate(zip(axs.ravel(), ['cadmium', 'copper', 'lead', 'zinc', 'om'])):\n    ax.set_title(target.title())\n    divider = make_axes_locatable(ax)\n    cax = divider.append_axes(\"right\", size=\"10%\", pad=0.05)\n    training_pts.plot(column=target, legend=True, ax=ax, cax=cax, cmap='viridis')\n    \n    if i != 0:\n        ax.set_yticklabels([])\n    \n    if i != 3:\n        ax.set_xticklabels([])\n    else:\n        ax.tick_params(axis='x', labelrotation=65)\n    \nfig.delaxes(axs.flatten()[i+1])\nplt.tight_layout()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](multitarget-regression-soil-properties_files/figure-html/cell-15-output-1.png){width=807 height=641}\n:::\n:::\n\n\n## Extract Raster Values at the Training Point Locations\n\nPixel values from a Raster object can be extracted using geometries within a geopandas.GeoDataFrame (points, lines, polygons) or by using labelled pixels from another raster with the same dimensions and crs.\n\nBy default the extracted values are returned as a geopandas.GeoDataFrame that contains the data and the coordinates of the pixels:\n\n::: {#e95a651d .cell execution_count=15}\n``` {.python .cell-code}\ntraining_df = stack.extract_vector(gdf=training_pts)\n\ntraining_df.index = training_df.index.get_level_values(\"geometry_idx\")\ntraining_df = training_df.merge(\n    training_pts.loc[:, (\"lead\", \"cadmium\", \"copper\", \"zinc\", \"om\")], \n    left_index=True, \n    right_index=True\n) \n```\n:::\n\n\n::: {#2a20967c .cell execution_count=16}\n``` {.python .cell-code}\ntraining_df = training_df.dropna()\ntraining_df.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=16}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>chnl_dist</th>\n      <th>dem</th>\n      <th>dist</th>\n      <th>ffreq</th>\n      <th>landimg2</th>\n      <th>landimg3</th>\n      <th>landimg4</th>\n      <th>mrvbf</th>\n      <th>rsp</th>\n      <th>slope</th>\n      <th>...</th>\n      <th>tr</th>\n      <th>bl</th>\n      <th>br</th>\n      <th>c</th>\n      <th>geometry</th>\n      <th>lead</th>\n      <th>cadmium</th>\n      <th>copper</th>\n      <th>zinc</th>\n      <th>om</th>\n    </tr>\n    <tr>\n      <th>geometry_idx</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0.000000</td>\n      <td>3214.0</td>\n      <td>0.001358</td>\n      <td>1.0</td>\n      <td>97.0</td>\n      <td>92.0</td>\n      <td>192.0</td>\n      <td>3.523824e-06</td>\n      <td>0.000000</td>\n      <td>1.423307</td>\n      <td>...</td>\n      <td>12.369317</td>\n      <td>119.268608</td>\n      <td>100.717430</td>\n      <td>55.470715</td>\n      <td>POINT (181072.000 333611.000)</td>\n      <td>299.0</td>\n      <td>11.7</td>\n      <td>85.0</td>\n      <td>1022.0</td>\n      <td>13.6</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>79.849854</td>\n      <td>3402.0</td>\n      <td>0.012224</td>\n      <td>1.0</td>\n      <td>160.0</td>\n      <td>183.0</td>\n      <td>183.0</td>\n      <td>9.879866e-06</td>\n      <td>0.082085</td>\n      <td>1.286004</td>\n      <td>...</td>\n      <td>13.928389</td>\n      <td>117.046997</td>\n      <td>98.858482</td>\n      <td>53.235325</td>\n      <td>POINT (181025.000 333558.000)</td>\n      <td>277.0</td>\n      <td>8.6</td>\n      <td>81.0</td>\n      <td>1141.0</td>\n      <td>14.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0.000000</td>\n      <td>3277.0</td>\n      <td>0.103029</td>\n      <td>1.0</td>\n      <td>178.0</td>\n      <td>209.0</td>\n      <td>179.0</td>\n      <td>1.340742e-03</td>\n      <td>0.000000</td>\n      <td>0.674711</td>\n      <td>...</td>\n      <td>10.295630</td>\n      <td>119.281181</td>\n      <td>98.412399</td>\n      <td>55.226807</td>\n      <td>POINT (181165.000 333537.000)</td>\n      <td>199.0</td>\n      <td>6.5</td>\n      <td>68.0</td>\n      <td>640.0</td>\n      <td>13.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>184.743164</td>\n      <td>3563.0</td>\n      <td>0.190094</td>\n      <td>1.0</td>\n      <td>114.0</td>\n      <td>135.0</td>\n      <td>152.0</td>\n      <td>6.547428e-07</td>\n      <td>0.192325</td>\n      <td>1.413479</td>\n      <td>...</td>\n      <td>8.485281</td>\n      <td>120.208153</td>\n      <td>97.185387</td>\n      <td>56.035702</td>\n      <td>POINT (181298.000 333484.000)</td>\n      <td>116.0</td>\n      <td>2.6</td>\n      <td>81.0</td>\n      <td>257.0</td>\n      <td>8.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>16.768555</td>\n      <td>3406.0</td>\n      <td>0.277090</td>\n      <td>1.0</td>\n      <td>133.0</td>\n      <td>154.0</td>\n      <td>151.0</td>\n      <td>1.588824e-03</td>\n      <td>0.016689</td>\n      <td>0.531276</td>\n      <td>...</td>\n      <td>11.661903</td>\n      <td>117.004272</td>\n      <td>93.193344</td>\n      <td>52.801514</td>\n      <td>POINT (181307.000 333330.000)</td>\n      <td>117.0</td>\n      <td>2.8</td>\n      <td>48.0</td>\n      <td>269.0</td>\n      <td>8.7</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 25 columns</p>\n</div>\n```\n:::\n:::\n\n\n## Developing a Machine Learning Model\n\nHere we are going to create a machine learning pipeline that correctly handles categorical predictors via one-hot encoding:\n\n::: {#18f93158 .cell execution_count=17}\n``` {.python .cell-code}\nstack.names\n```\n\n::: {.cell-output .cell-output-display execution_count=17}\n```\ndict_keys(['chnl_dist', 'dem', 'dist', 'ffreq', 'landimg2', 'landimg3', 'landimg4', 'mrvbf', 'rsp', 'slope', 'soil', 'twi', 'x_coordinates', 'y_coordinates', 'tl', 'tr', 'bl', 'br', 'c'])\n```\n:::\n:::\n\n\n::: {#3ef2e2ba .cell execution_count=18}\n``` {.python .cell-code}\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.ensemble import ExtraTreesRegressor\nfrom sklearn.preprocessing import OneHotEncoder\nfrom sklearn.compose import ColumnTransformer\n\nsoil_idx = [i for i, name in enumerate(stack.names) if name == 'soil']\n\ntrans = ColumnTransformer([\n    ('ohe', OneHotEncoder(categories='auto', handle_unknown='ignore'), soil_idx)\n    ], remainder='passthrough')\n\net = ExtraTreesRegressor(n_estimators=500, n_jobs=-1, random_state=1234)\net = Pipeline([\n    ('preproc', trans),\n    ('regressor', et)])\n```\n:::\n\n\nNow we can separate our response and predictor variables and train the model:\n\n::: {#1761a1ea .cell execution_count=19}\n``` {.python .cell-code}\nX = training_df.loc[:, stack.names]\ny = training_df.loc[:, ['lead', 'cadmium', 'copper', 'zinc', 'om']]\net.fit(X, y)\n```\n\n::: {.cell-output .cell-output-display execution_count=19}\n```{=html}\n<style>#sk-container-id-1 {\n  /* Definition of color scheme common for light and dark mode */\n  --sklearn-color-text: black;\n  --sklearn-color-line: gray;\n  /* Definition of color scheme for unfitted estimators */\n  --sklearn-color-unfitted-level-0: #fff5e6;\n  --sklearn-color-unfitted-level-1: #f6e4d2;\n  --sklearn-color-unfitted-level-2: #ffe0b3;\n  --sklearn-color-unfitted-level-3: chocolate;\n  /* Definition of color scheme for fitted estimators */\n  --sklearn-color-fitted-level-0: #f0f8ff;\n  --sklearn-color-fitted-level-1: #d4ebff;\n  --sklearn-color-fitted-level-2: #b3dbfd;\n  --sklearn-color-fitted-level-3: cornflowerblue;\n\n  /* Specific color for light theme */\n  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n  --sklearn-color-icon: #696969;\n\n  @media (prefers-color-scheme: dark) {\n    /* Redefinition of color scheme for dark theme */\n    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n    --sklearn-color-icon: #878787;\n  }\n}\n\n#sk-container-id-1 {\n  color: var(--sklearn-color-text);\n}\n\n#sk-container-id-1 pre {\n  padding: 0;\n}\n\n#sk-container-id-1 input.sk-hidden--visually {\n  border: 0;\n  clip: rect(1px 1px 1px 1px);\n  clip: rect(1px, 1px, 1px, 1px);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n}\n\n#sk-container-id-1 div.sk-dashed-wrapped {\n  border: 1px dashed var(--sklearn-color-line);\n  margin: 0 0.4em 0.5em 0.4em;\n  box-sizing: border-box;\n  padding-bottom: 0.4em;\n  background-color: var(--sklearn-color-background);\n}\n\n#sk-container-id-1 div.sk-container {\n  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n     but bootstrap.min.css set `[hidden] { display: none !important; }`\n     so we also need the `!important` here to be able to override the\n     default hidden behavior on the sphinx rendered scikit-learn.org.\n     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n  display: inline-block !important;\n  position: relative;\n}\n\n#sk-container-id-1 div.sk-text-repr-fallback {\n  display: none;\n}\n\ndiv.sk-parallel-item,\ndiv.sk-serial,\ndiv.sk-item {\n  /* draw centered vertical line to link estimators */\n  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n  background-size: 2px 100%;\n  background-repeat: no-repeat;\n  background-position: center center;\n}\n\n/* Parallel-specific style estimator block */\n\n#sk-container-id-1 div.sk-parallel-item::after {\n  content: \"\";\n  width: 100%;\n  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n  flex-grow: 1;\n}\n\n#sk-container-id-1 div.sk-parallel {\n  display: flex;\n  align-items: stretch;\n  justify-content: center;\n  background-color: var(--sklearn-color-background);\n  position: relative;\n}\n\n#sk-container-id-1 div.sk-parallel-item {\n  display: flex;\n  flex-direction: column;\n}\n\n#sk-container-id-1 div.sk-parallel-item:first-child::after {\n  align-self: flex-end;\n  width: 50%;\n}\n\n#sk-container-id-1 div.sk-parallel-item:last-child::after {\n  align-self: flex-start;\n  width: 50%;\n}\n\n#sk-container-id-1 div.sk-parallel-item:only-child::after {\n  width: 0;\n}\n\n/* Serial-specific style estimator block */\n\n#sk-container-id-1 div.sk-serial {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: var(--sklearn-color-background);\n  padding-right: 1em;\n  padding-left: 1em;\n}\n\n\n/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\nclickable and can be expanded/collapsed.\n- Pipeline and ColumnTransformer use this feature and define the default style\n- Estimators will overwrite some part of the style using the `sk-estimator` class\n*/\n\n/* Pipeline and ColumnTransformer style (default) */\n\n#sk-container-id-1 div.sk-toggleable {\n  /* Default theme specific background. It is overwritten whether we have a\n  specific estimator or a Pipeline/ColumnTransformer */\n  background-color: var(--sklearn-color-background);\n}\n\n/* Toggleable label */\n#sk-container-id-1 label.sk-toggleable__label {\n  cursor: pointer;\n  display: block;\n  width: 100%;\n  margin-bottom: 0;\n  padding: 0.5em;\n  box-sizing: border-box;\n  text-align: center;\n}\n\n#sk-container-id-1 label.sk-toggleable__label-arrow:before {\n  /* Arrow on the left of the label */\n  content: \"▸\";\n  float: left;\n  margin-right: 0.25em;\n  color: var(--sklearn-color-icon);\n}\n\n#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {\n  color: var(--sklearn-color-text);\n}\n\n/* Toggleable content - dropdown */\n\n#sk-container-id-1 div.sk-toggleable__content {\n  max-height: 0;\n  max-width: 0;\n  overflow: hidden;\n  text-align: left;\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-1 div.sk-toggleable__content.fitted {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n#sk-container-id-1 div.sk-toggleable__content pre {\n  margin: 0.2em;\n  border-radius: 0.25em;\n  color: var(--sklearn-color-text);\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-1 div.sk-toggleable__content.fitted pre {\n  /* unfitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n  /* Expand drop-down */\n  max-height: 200px;\n  max-width: 100%;\n  overflow: auto;\n}\n\n#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n  content: \"▾\";\n}\n\n/* Pipeline/ColumnTransformer-specific style */\n\n#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-1 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Estimator-specific style */\n\n/* Colorize estimator box */\n#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-1 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n#sk-container-id-1 div.sk-label label.sk-toggleable__label,\n#sk-container-id-1 div.sk-label label {\n  /* The background is the default theme color */\n  color: var(--sklearn-color-text-on-default-background);\n}\n\n/* On hover, darken the color of the background */\n#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n/* Label box, darken color on hover, fitted */\n#sk-container-id-1 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Estimator label */\n\n#sk-container-id-1 div.sk-label label {\n  font-family: monospace;\n  font-weight: bold;\n  display: inline-block;\n  line-height: 1.2em;\n}\n\n#sk-container-id-1 div.sk-label-container {\n  text-align: center;\n}\n\n/* Estimator-specific */\n#sk-container-id-1 div.sk-estimator {\n  font-family: monospace;\n  border: 1px dotted var(--sklearn-color-border-box);\n  border-radius: 0.25em;\n  box-sizing: border-box;\n  margin-bottom: 0.5em;\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-1 div.sk-estimator.fitted {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n/* on hover */\n#sk-container-id-1 div.sk-estimator:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-1 div.sk-estimator.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Specification for estimator info (e.g. \"i\" and \"?\") */\n\n/* Common style for \"i\" and \"?\" */\n\n.sk-estimator-doc-link,\na:link.sk-estimator-doc-link,\na:visited.sk-estimator-doc-link {\n  float: right;\n  font-size: smaller;\n  line-height: 1em;\n  font-family: monospace;\n  background-color: var(--sklearn-color-background);\n  border-radius: 1em;\n  height: 1em;\n  width: 1em;\n  text-decoration: none !important;\n  margin-left: 1ex;\n  /* unfitted */\n  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n  color: var(--sklearn-color-unfitted-level-1);\n}\n\n.sk-estimator-doc-link.fitted,\na:link.sk-estimator-doc-link.fitted,\na:visited.sk-estimator-doc-link.fitted {\n  /* fitted */\n  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n  color: var(--sklearn-color-fitted-level-1);\n}\n\n/* On hover */\ndiv.sk-estimator:hover .sk-estimator-doc-link:hover,\n.sk-estimator-doc-link:hover,\ndiv.sk-label-container:hover .sk-estimator-doc-link:hover,\n.sk-estimator-doc-link:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\ndiv.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n.sk-estimator-doc-link.fitted:hover,\ndiv.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n.sk-estimator-doc-link.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\n/* Span, style for the box shown on hovering the info icon */\n.sk-estimator-doc-link span {\n  display: none;\n  z-index: 9999;\n  position: relative;\n  font-weight: normal;\n  right: .2ex;\n  padding: .5ex;\n  margin: .5ex;\n  width: min-content;\n  min-width: 20ex;\n  max-width: 50ex;\n  color: var(--sklearn-color-text);\n  box-shadow: 2pt 2pt 4pt #999;\n  /* unfitted */\n  background: var(--sklearn-color-unfitted-level-0);\n  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n}\n\n.sk-estimator-doc-link.fitted span {\n  /* fitted */\n  background: var(--sklearn-color-fitted-level-0);\n  border: var(--sklearn-color-fitted-level-3);\n}\n\n.sk-estimator-doc-link:hover span {\n  display: block;\n}\n\n/* \"?\"-specific style due to the `<a>` HTML tag */\n\n#sk-container-id-1 a.estimator_doc_link {\n  float: right;\n  font-size: 1rem;\n  line-height: 1em;\n  font-family: monospace;\n  background-color: var(--sklearn-color-background);\n  border-radius: 1rem;\n  height: 1rem;\n  width: 1rem;\n  text-decoration: none;\n  /* unfitted */\n  color: var(--sklearn-color-unfitted-level-1);\n  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n}\n\n#sk-container-id-1 a.estimator_doc_link.fitted {\n  /* fitted */\n  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n  color: var(--sklearn-color-fitted-level-1);\n}\n\n/* On hover */\n#sk-container-id-1 a.estimator_doc_link:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\n#sk-container-id-1 a.estimator_doc_link.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-3);\n}\n</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>Pipeline(steps=[(&#x27;preproc&#x27;,\n                 ColumnTransformer(remainder=&#x27;passthrough&#x27;,\n                                   transformers=[(&#x27;ohe&#x27;,\n                                                  OneHotEncoder(handle_unknown=&#x27;ignore&#x27;),\n                                                  [10])])),\n                (&#x27;regressor&#x27;,\n                 ExtraTreesRegressor(n_estimators=500, n_jobs=-1,\n                                     random_state=1234))])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" ><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;Pipeline<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.4/modules/generated/sklearn.pipeline.Pipeline.html\">?<span>Documentation for Pipeline</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>Pipeline(steps=[(&#x27;preproc&#x27;,\n                 ColumnTransformer(remainder=&#x27;passthrough&#x27;,\n                                   transformers=[(&#x27;ohe&#x27;,\n                                                  OneHotEncoder(handle_unknown=&#x27;ignore&#x27;),\n                                                  [10])])),\n                (&#x27;regressor&#x27;,\n                 ExtraTreesRegressor(n_estimators=500, n_jobs=-1,\n                                     random_state=1234))])</pre></div> </div></div><div class=\"sk-serial\"><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" ><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;preproc: ColumnTransformer<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.4/modules/generated/sklearn.compose.ColumnTransformer.html\">?<span>Documentation for preproc: ColumnTransformer</span></a></label><div class=\"sk-toggleable__content fitted\"><pre>ColumnTransformer(remainder=&#x27;passthrough&#x27;,\n                  transformers=[(&#x27;ohe&#x27;, OneHotEncoder(handle_unknown=&#x27;ignore&#x27;),\n                                 [10])])</pre></div> </div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" ><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">ohe</label><div class=\"sk-toggleable__content fitted\"><pre>[10]</pre></div> </div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" ><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;OneHotEncoder<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.4/modules/generated/sklearn.preprocessing.OneHotEncoder.html\">?<span>Documentation for OneHotEncoder</span></a></label><div class=\"sk-toggleable__content fitted\"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div> </div></div></div></div></div><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-5\" type=\"checkbox\" ><label for=\"sk-estimator-id-5\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">remainder</label><div class=\"sk-toggleable__content fitted\"><pre>[&#x27;chnl_dist&#x27;, &#x27;dem&#x27;, &#x27;dist&#x27;, &#x27;ffreq&#x27;, &#x27;landimg2&#x27;, &#x27;landimg3&#x27;, &#x27;landimg4&#x27;, &#x27;mrvbf&#x27;, &#x27;rsp&#x27;, &#x27;slope&#x27;, &#x27;twi&#x27;, &#x27;x_coordinates&#x27;, &#x27;y_coordinates&#x27;, &#x27;tl&#x27;, &#x27;tr&#x27;, &#x27;bl&#x27;, &#x27;br&#x27;, &#x27;c&#x27;]</pre></div> </div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-6\" type=\"checkbox\" ><label for=\"sk-estimator-id-6\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">passthrough</label><div class=\"sk-toggleable__content fitted\"><pre>passthrough</pre></div> </div></div></div></div></div></div></div><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-7\" type=\"checkbox\" ><label for=\"sk-estimator-id-7\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;ExtraTreesRegressor<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.4/modules/generated/sklearn.ensemble.ExtraTreesRegressor.html\">?<span>Documentation for ExtraTreesRegressor</span></a></label><div class=\"sk-toggleable__content fitted\"><pre>ExtraTreesRegressor(n_estimators=500, n_jobs=-1, random_state=1234)</pre></div> </div></div></div></div></div></div>\n```\n:::\n:::\n\n\nTo evaluate the performance of the model, we will use 10-fold cross validation:\n\n::: {#92dc1c25 .cell execution_count=20}\n``` {.python .cell-code}\nfrom sklearn.model_selection import cross_validate, KFold\n\nouter = KFold(n_splits=10, shuffle=True, random_state=1234)\nscores = cross_validate(et, X, y, scoring='neg_mean_squared_error', cv=10, n_jobs=1)\nrmse = np.sqrt(-scores['test_score']).mean()\n\nprint(\"Our RMSE score is {}\".format(rmse))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nOur RMSE score is 105.19227221271413\n```\n:::\n:::\n\n\n## Feature Importances\n\n::: {#3de44b19 .cell execution_count=21}\n``` {.python .cell-code}\nohe_names = deepcopy(list(stack.names))\nohe_names.insert(soil_idx[0], 'soil1')\nohe_names.insert(soil_idx[0], 'soil2')\nohe_names = np.array(ohe_names)\n```\n:::\n\n\n::: {#dde4cc5c .cell execution_count=22}\n``` {.python .cell-code}\nmpl.style.use('ggplot')\n\nfimp = et.named_steps['regressor'].feature_importances_\n\nfig, ax = plt.subplots(figsize=(4, 6))\nax.barh(y=ohe_names[fimp.argsort()], width=fimp[fimp.argsort()])\nax.set_xlabel('Feature Importance Score')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](multitarget-regression-soil-properties_files/figure-html/cell-23-output-1.png){width=420 height=504}\n:::\n:::\n\n\n## Prediction on the Raster object\n\n::: {#a177af7f .cell execution_count=23}\n``` {.python .cell-code}\npreds = stack.predict(et)\npreds.rename(\n    {old: new for old, new in zip(preds.names, ['lead', 'cadmium', 'copper', 'zinc', 'om'])},\n    in_place=True\n)\npreds.lead.cmap = 'rainbow'\npreds.cadmium.cmap = 'rainbow'\npreds.copper.cmap = 'rainbow'\npreds.zinc.cmap = 'rainbow'\npreds.om.cmap = 'rainbow'\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n/Users/stevenpawley/Library/Caches/pypoetry/virtualenvs/pyspatialml-NqZ1tMUm-py3.11/lib/python3.11/site-packages/sklearn/base.py:493: UserWarning: X does not have valid feature names, but OneHotEncoder was fitted with feature names\n  warnings.warn(\n/Users/stevenpawley/Library/Caches/pypoetry/virtualenvs/pyspatialml-NqZ1tMUm-py3.11/lib/python3.11/site-packages/sklearn/base.py:493: UserWarning: X does not have valid feature names, but OneHotEncoder was fitted with feature names\n  warnings.warn(\n```\n:::\n:::\n\n\nPlot the results:\n\n::: {#efd9a537 .cell execution_count=24}\n``` {.python .cell-code}\npreds.plot(out_shape=(200, 200), title_fontsize=14, figsize=(10, 8))\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](multitarget-regression-soil-properties_files/figure-html/cell-25-output-1.png){width=822 height=634}\n:::\n:::\n\n\n",
    "supporting": [
      "multitarget-regression-soil-properties_files/figure-html"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}